// Generated by CoffeeScript 1.12.4
(function() {
  (require("chai")).should();

  describe("view reducer", function() {
    var AT, PV, V;
    V = require("../../src/reducers/view");
    PV = require("../../src/constants/PanelView");
    AT = require("../../src/constants/ActionTypes");
    it("should be a function", function() {
      return V.should.be.a("function");
    });
    describe("right", function() {
      it("is a key in view store", function() {
        return V().should.have.ownProperty("right");
      });
      return it("should change to IMPRINT view after action SHOW_IMPRINT", function() {
        return V({}, {
          type: AT.SHOW_IMPRINT
        }).right.should.equal(PV.IMPRINT);
      });
    });
    describe("left", function() {
      it("should change to RESULT view after action SEARCH_RESULT", function() {
        return V({}, {
          type: AT.SEARCH_RESULT
        }).left.should.equal(PV.RESULT);
      });
      return it("should not be changed after action SEARCH_RESULT if it exists", function() {
        return V({
          left: "foo"
        }, {
          type: AT.SEARCH_RESULT
        }).left.should.equal("foo");
      });
    });
    return describe("the menu", function() {
      it("should be active in the initial state", function() {
        return V().menu.should.equal(true);
      });
      it("visibility can be toggled", function() {
        var state1, state2;
        state1 = V(V(), {
          type: AT.TOGGLE_MENU
        });
        state1.menu.should.equal(false);
        state2 = V(state1, {
          type: AT.TOGGLE_MENU
        });
        return state2.menu.should.equal(true);
      });
      return it("cannot be opend if a modal dialog is open", function() {
        var state;
        state = V({
          modal: PV.LOCATE,
          menu: false
        }, {
          type: AT.TOGGLE_MENU
        });
        return state.menu.should.equal(false);
      });
    });
  });

}).call(this);
